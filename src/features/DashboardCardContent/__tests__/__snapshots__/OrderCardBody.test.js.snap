// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OrderCardBody /> render() Shallow rendering - MatchSnapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrderCardBody />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef(Box)
          sx={
            Object {
              "display": "flex",
              "justifyContent": "space-between",
            }
          }
        >
          <Paragraph
            styleProps={
              Object {
                "color": "#6C7C8C",
              }
            }
          >
            Orders received:
          </Paragraph>
          <Paragraph
            styleProps={
              Object {
                "fontSize": "17px",
                "fontWeight": "500",
              }
            }
          >
            156
          </Paragraph>
        </ForwardRef(Box)>,
        <ForwardRef(Box)
          sx={
            Object {
              "display": "flex",
              "justifyContent": "space-between",
            }
          }
        >
          <Paragraph
            styleProps={
              Object {
                "color": "#6C7C8C",
              }
            }
          >
            Earnings:
          </Paragraph>
          <Paragraph
            styleProps={
              Object {
                "fontSize": "17px",
                "fontWeight": "500",
              }
            }
          >
            € 
            1893.24
          </Paragraph>
        </ForwardRef(Box)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Paragraph
              styleProps={
                Object {
                  "color": "#6C7C8C",
                }
              }
            >
              Orders received:
            </Paragraph>,
            <Paragraph
              styleProps={
                Object {
                  "fontSize": "17px",
                  "fontWeight": "500",
                }
              }
            >
              156
            </Paragraph>,
          ],
          "sx": Object {
            "display": "flex",
            "justifyContent": "space-between",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Orders received:",
              "styleProps": Object {
                "color": "#6C7C8C",
              },
            },
            "ref": null,
            "rendered": "Orders received:",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": 156,
              "styleProps": Object {
                "fontSize": "17px",
                "fontWeight": "500",
              },
            },
            "ref": null,
            "rendered": 156,
            "type": [Function],
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "children": [Function],
            "component": [Function],
            "sx": [Function],
          },
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Paragraph
              styleProps={
                Object {
                  "color": "#6C7C8C",
                }
              }
            >
              Earnings:
            </Paragraph>,
            <Paragraph
              styleProps={
                Object {
                  "fontSize": "17px",
                  "fontWeight": "500",
                }
              }
            >
              € 
              1893.24
            </Paragraph>,
          ],
          "sx": Object {
            "display": "flex",
            "justifyContent": "space-between",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Earnings:",
              "styleProps": Object {
                "color": "#6C7C8C",
              },
            },
            "ref": null,
            "rendered": "Earnings:",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                "€ ",
                1893.24,
              ],
              "styleProps": Object {
                "fontSize": "17px",
                "fontWeight": "500",
              },
            },
            "ref": null,
            "rendered": Array [
              "€ ",
              1893.24,
            ],
            "type": [Function],
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {
            "children": [Function],
            "component": [Function],
            "sx": [Function],
          },
          "render": [Function],
        },
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef(Box)
            sx={
              Object {
                "display": "flex",
                "justifyContent": "space-between",
              }
            }
          >
            <Paragraph
              styleProps={
                Object {
                  "color": "#6C7C8C",
                }
              }
            >
              Orders received:
            </Paragraph>
            <Paragraph
              styleProps={
                Object {
                  "fontSize": "17px",
                  "fontWeight": "500",
                }
              }
            >
              156
            </Paragraph>
          </ForwardRef(Box)>,
          <ForwardRef(Box)
            sx={
              Object {
                "display": "flex",
                "justifyContent": "space-between",
              }
            }
          >
            <Paragraph
              styleProps={
                Object {
                  "color": "#6C7C8C",
                }
              }
            >
              Earnings:
            </Paragraph>
            <Paragraph
              styleProps={
                Object {
                  "fontSize": "17px",
                  "fontWeight": "500",
                }
              }
            >
              € 
              1893.24
            </Paragraph>
          </ForwardRef(Box)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Paragraph
                styleProps={
                  Object {
                    "color": "#6C7C8C",
                  }
                }
              >
                Orders received:
              </Paragraph>,
              <Paragraph
                styleProps={
                  Object {
                    "fontSize": "17px",
                    "fontWeight": "500",
                  }
                }
              >
                156
              </Paragraph>,
            ],
            "sx": Object {
              "display": "flex",
              "justifyContent": "space-between",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Orders received:",
                "styleProps": Object {
                  "color": "#6C7C8C",
                },
              },
              "ref": null,
              "rendered": "Orders received:",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": 156,
                "styleProps": Object {
                  "fontSize": "17px",
                  "fontWeight": "500",
                },
              },
              "ref": null,
              "rendered": 156,
              "type": [Function],
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "children": [Function],
              "component": [Function],
              "sx": [Function],
            },
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Paragraph
                styleProps={
                  Object {
                    "color": "#6C7C8C",
                  }
                }
              >
                Earnings:
              </Paragraph>,
              <Paragraph
                styleProps={
                  Object {
                    "fontSize": "17px",
                    "fontWeight": "500",
                  }
                }
              >
                € 
                1893.24
              </Paragraph>,
            ],
            "sx": Object {
              "display": "flex",
              "justifyContent": "space-between",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Earnings:",
                "styleProps": Object {
                  "color": "#6C7C8C",
                },
              },
              "ref": null,
              "rendered": "Earnings:",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "€ ",
                  1893.24,
                ],
                "styleProps": Object {
                  "fontSize": "17px",
                  "fontWeight": "500",
                },
              },
              "ref": null,
              "rendered": Array [
                "€ ",
                1893.24,
              ],
              "type": [Function],
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {
              "children": [Function],
              "component": [Function],
              "sx": [Function],
            },
            "render": [Function],
          },
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
